{"version":3,"sources":["Component/Context.js","Component/City.js","Component/MoreData.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","query","setQuery","Main","Weather","Wind","WeatherData","setWeatherData","mainurl","process","fetchWeather","a","fetch","response","json","data","main","weather","wind","useEffect","Provider","value","HandleSubmit","e","preventDefault","useGlobalContext","useContext","City","date","Date","toLocaleDateString","className","type","onChange","target","id","onClick","moment","format","map","items","icon","index","src","alt","temp","description","humidity","speed","MoreData","style","backgroundColor","borderColor","feels_like","pressure","deg","gust","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5e17b41.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nconst url = \"https://api.openweathermap.org/data/2.5/weather?q=\";\r\n\r\nconst AppContext = React.createContext();\r\nconst AppProvider = ({ children }) => {\r\n  const [query, setQuery] = useState(\"London\");\r\n  const [WeatherData, setWeatherData] = useState({\r\n    Main: {},\r\n    Weather: [],\r\n    Wind: {},\r\n  });\r\n  const mainurl = `${url}${query}&appid=${process.env.REACT_APP_WEATHER_KEY}&units=metric`;\r\n  const fetchWeather = async () => {\r\n    const response = await fetch(mainurl);\r\n    const data = await response.json();\r\n    setWeatherData({\r\n      Main: data.main,\r\n      Weather: data.weather,\r\n      Wind: data.wind,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchWeather();\r\n  }, []);\r\n  const HandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchWeather();\r\n  };\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        query,\r\n        setQuery,\r\n        WeatherData,\r\n        HandleSubmit,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\nexport { AppContext, AppProvider };\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport moment from \"moment\";\r\nimport { useGlobalContext } from \"../Component/Context\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nconst City = () => {\r\n  const date = new Date().toLocaleDateString();\r\n  const { query, setQuery, HandleSubmit, WeatherData } = useGlobalContext();\r\n  return (\r\n    <section>\r\n      <div className=\"p-4 d-flex justify-content-center align-items-center\">\r\n        <div className=\"input-group flex-nowrap\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n          ></input>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"input-group-text\"\r\n            id=\"addon-wrapping\"\r\n            onClick={HandleSubmit}\r\n          >\r\n            <AiOutlineSearch className=\"search-icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center align-items-center p-2\">\r\n        <div className=\"time-date text-center\">\r\n          <h1>{moment().format(\"LT\")}</h1>\r\n          <h1>{moment({ date }).format(\"MMM ,D, YYYY\")} </h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center align-items-center flex-column p-2\">\r\n        <div className=\"d-flex justify-content-around align-items-center\">\r\n          {WeatherData.Weather.map((items) => {\r\n            const { icon, index } = items;\r\n            return (\r\n              <div key={index}>\r\n                <img\r\n                  src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                  alt=\"weather-icon\"\r\n                ></img>\r\n              </div>\r\n            );\r\n          })}\r\n          <h1 className=\"temprature\">{WeatherData.Main.temp}</h1>\r\n        </div>\r\n        {WeatherData.Weather.map((items) => {\r\n          const { index, description } = items;\r\n          return (\r\n            <div key={index}>\r\n              <h1 className=\"weather-discription\">{description}</h1>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"weather-stats d-flex justify-content-around text-center  p-2\">\r\n        <div className=\"humidity d-flex flex-column\">\r\n          <h1 className=\"weather-more-data\">Humidity</h1>\r\n          <h1 className=\"weather-more-sub-data\">\r\n            {WeatherData.Main.humidity} %\r\n          </h1>\r\n        </div>\r\n        <div className=\"wind-speed d-flex flex-column\">\r\n          <h1 className=\"weather-more-data\">Wind Speed</h1>\r\n          <h1 className=\"weather-more-sub-data\">\r\n            {WeatherData.Wind.speed} km/j\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default City;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../Component/Context\";\r\nimport {\r\n  WiThermometer,\r\n  WiHumidity,\r\n  WiCloud,\r\n  WiBarometer,\r\n  WiWindy,\r\n  WiCloudyGusts,\r\n  WiWindDeg,\r\n} from \"react-icons/wi\";\r\n\r\nimport \"../App.css\";\r\nconst MoreData = () => {\r\n  const { WeatherData } = useGlobalContext();\r\n  const Style = {\r\n    backgroundColor: \"#fafafa\",\r\n    borderColor: \"#fafafa\",\r\n  };\r\n  return (\r\n    <section className=\"p-3\">\r\n      <div className=\"row p-3\" style={Style}>\r\n        <div className=\" column-1 col-lg-4 col-md-4 col-sm-4 d-flex justify-content-center align-items-center flex-column\">\r\n          <div className=\"current-temp d-flex justify-content-center align-items-center px-3\">\r\n            {WeatherData.Weather.map((items) => {\r\n              const { icon, index } = items;\r\n              return (\r\n                <div key={index}>\r\n                  <img\r\n                    src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                    className=\"icon-size\"\r\n                    alt=\"icon\"\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n            <h1>{WeatherData.Main.temp}</h1>\r\n          </div>\r\n          <div className=\"feels-like d-flex justify-content-center align-items-center px-3\">\r\n            <WiThermometer className=\"icon-size\" />\r\n            <h1>{WeatherData.Main.feels_like}</h1>\r\n          </div>\r\n          <div className=\"feels-like d-flex justify-content-center align-items-center px-3\">\r\n            <WiBarometer className=\"icon-size\" />\r\n            <h1>{WeatherData.Main.pressure}</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"column-2 col-lg-4 col-md-4 col-sm-4\">\r\n          <div className=\"humidity d-flex justify-content-center align-items-center px-3\">\r\n            <WiHumidity className=\"icon-size\" />\r\n            <h1>{WeatherData.Main.humidity}%</h1>\r\n          </div>\r\n          <div className=\"cloud d-flex justify-content-center align-items-center px-3\">\r\n            <WiCloud className=\"icon-size\" />\r\n            <h1>{WeatherData.Main.humidity}</h1>\r\n          </div>\r\n          <div className=\"wind-speed d-flex justify-content-center align-items-center px-3\">\r\n            <WiWindy className=\"icon-size\" />\r\n            <h1>{WeatherData.Wind.speed}</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\" column-3 col-lg-4 col-md-4 col-sm-4\">\r\n          <div className=\"wind-direction d-flex justify-content-center align-items-center px-3\">\r\n            <WiWindDeg className=\"icon-size\" />\r\n            <h1>{WeatherData.Wind.deg}</h1>\r\n          </div>\r\n          <div className=\"wind-gust d-flex justify-content-center align-items-center px-3\">\r\n            <WiCloudyGusts className=\"icon-size\" />\r\n            <h1>{WeatherData.Wind.gust}</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default MoreData;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport City from \"./Component/City\";\nimport MoreData from \"./Component/MoreData\";\nconst App = () => {\n  return (\n    <div className=\"row m-4 \">\n      <div className=\"col-lg-6 col-12 \">\n        <div className=\"container p-3\">\n          <div className=\"city-temp\">\n            <City />\n          </div>\n        </div>\n      </div>\n      <div className=\"col-lg-6 col-12\">\n        <div className=\"row\">\n          <div className=\"container p-4\">\n            <div className=\"col-12\">\n              <div className=\"more-data\">\n                <MoreData />\n              </div>\n            </div>\n            <div className=\"col-12\">\n              <div className=\"forcast\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppProvider } from \"./Component/Context\";\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}